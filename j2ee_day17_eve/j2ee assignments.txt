Day 1
1. MUST try oracle db connectivity using Oracle supplied Type IV driver(from ojdbc6.jar)

2. MUST complete ---multi-threaded server design for (at least) login functionality.


Day 3
1. MUST extract apache tomcat server . Test it without IDE
(by setting env variables java_home & tomcat_home)
Launch web browser with URL 
http://localhost:7070/ -- to see tomcat welcome page
2. Check "manager" web application
username -- manager & blank password.

3. Create J2EE compliant web application under <webapps> as discussed . Add HTML page under the root & test it.

4. Add <welcome-file-list> -- web.xml & test .

5. Stop server. Add tomcat server to IDE (in a fresh workspace) & test.

6. Create dynamic web application in IDE & test the same.


Day 4
1. MUST test deployment of servlet using annotations & then xml tags -- without IDE

2. Try the same with IDE

3. Create HTML form for customer  complaint registration
customer email(type=text)
password 
technologies --chk box
os -- radio button
address -- select -option list
complaint desc -- text area.

Submit the form to RegServlet & display complaint details on the client browser.

4. MUST revise servlet life cycle.

Day 5
1. MUST revise servlet config vs context & load-on-startup

2. Complete bank user validation + displaying account details as discussed.

3. Pls read -- "readme_servlets"  -- for session tracking need & cookie based implementation.
Import day5_web & trace entire cookie based flow.

Day 8

1. Must revise --- till JSP using Javabeans from readme_jsp + day8_jsp examples

2. In validate.jsp -- replace "forward" scenario by redirect & user details must be displayed from display2.jsp.
(hint : use session scope instead of request scope)

3. Above code MUST work independent of cookies.
(hint : use URL rewriting)

4. Add user registration facility to day8_jsp & test the same.

Day 10

1. Import "jstl_demo" project & MUST revise
c:forEach,c:if,c:set,c:remove , c:url , c:redirect

2. Import emp_utils_jsp (same emp based case study ---implemented using JSP n JavaBeans n JSTL) & trace it in top-down manner.

3. Add "Hire Employee" feature in dept_details.jsp , without using scriptlets.

4. Remove scriptlet from logout.jsp -- replace the same by custom tag.


Day 11

1. Create hibernate based core java application & test it for insert functionality.

Day 13

1. Import day13_hibernate & test the following.
1.1 composite primary key
1.2 @ElementCollection -- for basic value type & UDT
1.3 LazyInitializationException -- in one ---many & load

2. MUST go through mvc hibernate integration & extend it to add customer update facility.

2.1 Use centralized err_handler.jsp -- configured via web.xml
error-page tag.

2.2 Hibernate based DAO layer

2.3 Custom tag (attribute based) -- optional --can be alternatively tried using JB.

2.4 From logout.jsp -- auto matically re-direct user to login.jsp(home page) -- using refresh header.


Day 14
1. MUST create from scratch struts based web application to test a pass through action(i.e w/o Business action class)

2. Must revise entire struts based examples by importing day14_struts.

Day 15
1. MUST try customer validation using struts & hibernate --creating project from scratch.
Must use SessionAware & ModelDriver i/f.

2. Do try presentation validation logic --by overriding validate() in action class.

Day16
1. Must try programmatic & xml validations along with property files.
2. Must try i18n &l10n
3. Must try content upload on 2 different machines.

Day17
1. Import "spring_basics" eclipse project ,  in your workspace & test as per the "sequence1.txt" from -- day16_help\spring_help

2. Convert xml based project to annotation based project & test the same.

